<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">

	<!-- DispatcherServlet Context: defines this servlet's request-processing infrastructure -->
	
	<!-- Enables the Spring MVC @Controller programming model -->
	<mvc:annotation-driven />
	<!-- 여러개의 bean(객체)이 등록된다. 만들어지는 모든 객체는 서블릿을 만들어주는애. requestMapping 을 사용하면 요청값을 맵핑할 수 있다.   -->

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources in the ${webappRoot}/resources directory -->
	
	<!--요청을 다 가로채니까, resources로 시작하는 요청들은 서블릿이 가로채지 못하게 하는 소스.(이미지같은것들)  -->
	<mvc:resources mapping="/resources/**" location="/resources/" />

	<!-- Resolves views selected for rendering by @Controllers to .jsp resources in the /WEB-INF/views directory -->
	
	<!--bean-> 객체를 미리 만들어놓겠다는 의미. 컨트롤러에서 jsp 파일을 불러줄 수 있는 객체  bean과 같은게 repository	-->
	<bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="prefix" value="/WEB-INF/views/" />
		<property name="suffix" value=".jsp" />
	</bean>
	<!-- bean : return "home" 으로 되어있는데 앞에 prefix가 붙고, 뒤에 jsp 가 붙어서 jsp view를 만들어주는 객체.  -->
	<context:component-scan base-package="cafe.jjdev.web" />
	<!--"cafe.jjdev.web" 하위에 있는 클래스들을 전부 스캔하는 코드.(annotation 찾기, 찾아서 bean 처리 해주기.)-->
	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource">
        <property name="driverClassName" value="com.mysql.jdbc.Driver"/>
        <property name="url" value="jdbc:mysql://127.0.0.1:3306/springdb?useUnicode=true&amp;characterEncoding=UTF-8"/>
        <property name="username" value="root"/>
        <property name="password" value="java0000"/>
    </bean>
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <!-- mybatis 세션생성시 사용할 dataSource주입 -->
        <property name="dataSource" ref="dataSource" />
        <!-- mybatis 세션생성후 쿼리를 실행시킬때 사용할 쿼리위치(메퍼)설정 -->
        <property name="mapperLocations">
            <list>
                <value>classpath:cafe/jjdev/web/service/MemberMapper.xml</value>
            </list>
        </property>
    </bean>
    <!-- mybatis를 사용하여 db에접속하여 쿼리를 보내는 주체인 SqlSessionTemplate빈 생성-->
    <bean id="sqlSessionTemplate" class="org.mybatis.spring.SqlSessionTemplate">
        <constructor-arg index="0" ref="sqlSessionFactory" />
    </bean>
</beans>
